diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7a49318aa..9f08d2cb3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -181,7 +181,7 @@ macro(yuzu_find_packages)
             if (FN_FORCE_REQUIRED)
                 find_package(${PACKAGE_PREFIX} ${PACKAGE_VERSION} REQUIRED)
             else()
-                find_package(${PACKAGE_PREFIX} ${PACKAGE_VERSION})
+                find_package(${PACKAGE_PREFIX} ${PACKAGE_VERSION} REQUIRED)
             endif()
         endif()
         if (NOT ${PACKAGE_PREFIX}_FOUND)
@@ -539,7 +539,6 @@ else()
     set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT yuzu-cmd)
 endif()
 
-
 # Installation instructions
 # =========================
 
diff --git a/externals/CMakeLists.txt b/externals/CMakeLists.txt
index d1dcc403b..ce541f279 100644
--- a/externals/CMakeLists.txt
+++ b/externals/CMakeLists.txt
@@ -4,10 +4,12 @@ list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMakeModules")
 list(APPEND CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/externals/find-modules")
 include(DownloadExternals)
 
+set(BUILD_SHARED_LIBS OFF)
+
 # xbyak
 if (ARCHITECTURE_x86 OR ARCHITECTURE_x86_64)
     add_library(xbyak INTERFACE)
-    target_include_directories(xbyak SYSTEM INTERFACE ./xbyak/xbyak)
+    target_include_directories(xbyak SYSTEM INTERFACE /usr/include/xbyak)
     target_compile_definitions(xbyak INTERFACE XBYAK_NO_OP_NAMES)
 endif()
 
@@ -84,13 +86,16 @@ if (ENABLE_WEB_SERVICE)
 
     # lurlparser
     add_subdirectory(lurlparser EXCLUDE_FROM_ALL)
-
-    # httplib
-    add_library(httplib INTERFACE)
-    target_include_directories(httplib INTERFACE ./httplib)
-    target_compile_definitions(httplib INTERFACE -DCPPHTTPLIB_OPENSSL_SUPPORT)
-    target_link_libraries(httplib INTERFACE ${OPENSSL_LIBRARIES})
 endif()
 
+# httplib
+add_library(httplib INTERFACE)
+target_include_directories(httplib INTERFACE ./httplib)
+target_compile_definitions(httplib INTERFACE -DCPPHTTPLIB_OPENSSL_SUPPORT)
+target_link_libraries(httplib INTERFACE ${OPENSSL_LIBRARIES})
+
 # Opus
-add_subdirectory(opus)
+add_library(opus INTERFACE)
+target_include_directories(opus SYSTEM INTERFACE /usr/include/opus)
+target_link_libraries(opus INTERFACE /usr/lib64/libopus.so)
+#add_subdirectory(opus)
diff --git a/externals/find-modules/FindOpus.cmake b/externals/find-modules/FindOpus.cmake
new file mode 100644
index 000000000..a58875647
--- /dev/null
+++ b/externals/find-modules/FindOpus.cmake
@@ -0,0 +1,42 @@
+
+find_package(PkgConfig QUIET)
+pkg_check_modules(PC_Opus QUIET opus)
+
+find_path(Opus_INCLUDE_DIR
+  NAMES opus.h
+  PATHS ${PC_Opus_INCLUDE_DIRS}
+  PATH_SUFFIXES opus
+)
+find_library(Opus_LIBRARY
+  NAMES opus
+  PATHS ${PC_Opus_LIBRARY_DIRS}
+)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Opus
+  FOUND_VAR Opus_FOUND
+  REQUIRED_VARS
+    Opus_LIBRARY
+    Opus_INCLUDE_DIR
+  VERSION_VAR Opus_VERSION
+)
+
+if(Opus_FOUND)
+  set(Opus_LIBRARIES ${Opus_INCLUDE_DIR})
+  set(Opus_INCLUDE_DIRS ${Opus_INCLUDE_DIR})
+  set(Opus_DEFINITIONS ${PC_Opus_CFLAGS_OTHER})
+endif()
+
+if(Opus_FOUND AND NOT TARGET Opus::Opus)
+  add_library(Opus::Opus UNKNOWN IMPORTED)
+  set_target_properties(Opus::Opus PROPERTIES
+    IMPORTED_LOCATION "${Opus_LIBRARY}"
+    INTERFACE_COMPILE_OPTIONS "${PC_Opus_CFLAGS_OTHER}"
+    INTERFACE_INCLUDE_DIRECTORIES "${Opus_INCLUDE_DIR}"
+  )
+endif()
+
+mark_as_advanced(
+    Opus_INCLUDE_DIR
+    Opus_LIBRARY
+)
diff --git a/externals/find-modules/FindUnicorn.cmake b/externals/find-modules/FindUnicorn.cmake
index a0f2a71f6..76cc011b1 100644
--- a/externals/find-modules/FindUnicorn.cmake
+++ b/externals/find-modules/FindUnicorn.cmake
@@ -13,6 +13,6 @@ find_library(LIBUNICORN_LIBRARY
              HINTS $ENV{UNICORNDIR})
 
 include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(unicorn DEFAULT_MSG
+find_package_handle_standard_args(Unicorn DEFAULT_MSG
                                   LIBUNICORN_LIBRARY LIBUNICORN_INCLUDE_DIR)
 mark_as_advanced(LIBUNICORN_INCLUDE_DIR LIBUNICORN_LIBRARY)
diff --git a/externals/find-modules/Findopus.cmake b/externals/find-modules/Findopus.cmake
deleted file mode 100644
index de84bd995..000000000
--- a/externals/find-modules/Findopus.cmake
+++ /dev/null
@@ -1,42 +0,0 @@
-
-find_package(PkgConfig QUIET)
-pkg_check_modules(PC_opus QUIET opus)
-
-find_path(opus_INCLUDE_DIR
-  NAMES opus.h
-  PATHS ${PC_opus_INCLUDE_DIRS}
-  PATH_SUFFIXES opus
-)
-find_library(opus_LIBRARY
-  NAMES opus
-  PATHS ${PC_opus_LIBRARY_DIRS}
-)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(opus
-  FOUND_VAR opus_FOUND
-  REQUIRED_VARS
-    opus_LIBRARY
-    opus_INCLUDE_DIR
-  VERSION_VAR opus_VERSION
-)
-
-if(opus_FOUND)
-  set(Opus_LIBRARIES ${opus_LIBRARY})
-  set(Opus_INCLUDE_DIRS ${opus_INCLUDE_DIR})
-  set(Opus_DEFINITIONS ${PC_opus_CFLAGS_OTHER})
-endif()
-
-if(opus_FOUND AND NOT TARGET Opus::Opus)
-  add_library(Opus::Opus UNKNOWN IMPORTED)
-  set_target_properties(Opus::Opus PROPERTIES
-    IMPORTED_LOCATION "${opus_LIBRARY}"
-    INTERFACE_COMPILE_OPTIONS "${PC_opus_CFLAGS_OTHER}"
-    INTERFACE_INCLUDE_DIRECTORIES "${opus_INCLUDE_DIR}"
-  )
-endif()
-
-mark_as_advanced(
-    opus_INCLUDE_DIR
-    opus_LIBRARY
-)
diff --git a/src/common/CMakeLists.txt b/src/common/CMakeLists.txt
index d120c8d3d..533b1a6e4 100644
--- a/src/common/CMakeLists.txt
+++ b/src/common/CMakeLists.txt
@@ -189,7 +189,7 @@ if(ARCHITECTURE_x86_64)
 endif()
 
 create_target_directory_groups(common)
-find_package(Boost 1.71 COMPONENTS context headers REQUIRED)
+find_package(Boost 1.71 COMPONENTS context REQUIRED)
 
 target_link_libraries(common PUBLIC ${Boost_LIBRARIES} fmt::fmt microprofile)
 target_link_libraries(common PRIVATE lz4::lz4 zstd::zstd xbyak)
